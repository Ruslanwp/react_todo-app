{"version":3,"sources":["Components/Form/Form.jsx","Components/TodoItem/TodoItem.jsx","Components/TodoList/TodoList.jsx","Components/TodosFilter/TodosFilter.jsx","App.js","Components/localStorage.jsx","index.js"],"names":["Form","handleQuery","query","handleChangeTodos","todos","onKeyDown","e","key","preventDefault","trim","newTodo","id","Date","title","completed","type","className","placeholder","value","onChange","event","target","TodoItem","useState","clickCounter","clickHandler","currentTitle","handleChangeTitle","classNames","editing","checked","map","todo","onClick","currentNo","filter","onKeyUp","TodoList","TodosFilter","selectFilterType","removeCompleted","filterBy","filteredTodosLength","length","href","some","App","activeCheckbox","checkboxHandler","JSON","parse","window","localStorage","getItem","storage","setStorage","useEffect","setItem","stringify","useLocalStorage","filteredTodos","getFilteredTodos","console","log","defaultChecked","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba69501e.chunk.js","sourcesContent":["import React from 'react'\n\nexport function Form({ handleQuery, query, handleChangeTodos, todos }) {\n  return (\n    <form onKeyDown={(e) => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n\n        if (query.trim() !== '') {\n          const newTodo = {\n            id: +new Date(),\n            title: query,\n            completed: false,\n          }\n\n          handleQuery('')\n          handleChangeTodos([...todos, newTodo])\n        }\n      }\n    }}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={query}\n        onChange={(event) => handleQuery(event.target.value)}\n      />\n    </form>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\n\nexport function TodoItem({\n  id,\n  title,\n  completed,\n  todos,\n  handleChangeTodos,\n}) {\n  const [clickCounter, clickHandler] = useState(0);\n  const [currentTitle, handleChangeTitle] = useState(title)\n\n  const deleteTodo = () => {\n    handleChangeTodos(todos.filter(todo => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return false\n    }))\n  }\n\n  const editTodo = (value) => {\n    handleChangeTodos(todos.map(todo => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        title: value\n      }\n    }))\n  }\n\n  const addTodo = () => {\n    handleChangeTodos(todos.map(todo => {\n      if (todo.id !== id) {\n        return todo;\n      }\n\n      return {\n        ...todo,\n        completed: !completed\n      }\n    }))\n  }\n\n  return (\n    <li className={classNames({\n      completed,\n      editing: clickCounter === 2\n    })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          className=\"toggle\"\n          onChange={addTodo}\n          \n        />\n        <label onClick={() => {\n            clickHandler(currentNo => currentNo + 1);\n          }}\n        >\n          {currentTitle}\n        </label>\n        <button\n          onClick={deleteTodo}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={currentTitle}\n        onChange={(e) => {\n          handleChangeTitle(e.target.value)\n        }}\n        onKeyUp={(e) => {\n          if (e.key === 'Enter' && currentTitle !== '') {\n            clickHandler(0)\n            editTodo(currentTitle)\n          }\n\n          if (e.key === 'Escape') {\n            clickHandler(0)\n            handleChangeTitle(title)\n          }\n        }}\n      />\n    </li>\n  )\n}\n","import React from 'react'\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nexport function TodoList({ todos, handleChangeTodos}) {\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          title={todo.title}\n          completed={todo.completed}\n          handleChangeTodos={handleChangeTodos}\n          todos={todos}\n        />\n      ))}\n    </ul>\n  )\n}\n","import React from 'react'\n\nexport function TodosFilter({ selectFilterType, todos, removeCompleted, filterBy }) {\n  const filteredTodosLength = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {filteredTodosLength > 0 ? `${filteredTodosLength} items left` : `nothing to do`}\n      </span>\n\n      <ul className=\"filters\">\n        <li onClick={() => selectFilterType('all')}>\n          <a\n            href=\"#/\"\n            className={filterBy === 'all' ? 'selected' : ''}\n          >\n            All\n          </a>\n        </li>\n\n        <li onClick={() => selectFilterType('uncompleted')}>\n          <a\n            href=\"#/active\"\n            className={filterBy === 'uncompleted' ? 'selected' : ''}\n          >\n            Active\n          </a>\n        </li>\n\n        <li onClick={() => selectFilterType('completed')}>\n          <a\n            href=\"#/completed\"\n            className={filterBy === 'completed' ? 'selected' : ''}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {todos.some(todo => todo.completed) && <button\n      onClick={() => removeCompleted(todos.filter(todo => !todo.completed))}\n        type=\"button\"\n        className=\"clear-completed\"\n      >\n        Clear completed\n      </button>}\n    </footer>\n  )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { Form } from './Components/Form/Form';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport { TodosFilter } from './Components/TodosFilter/TodosFilter';\nimport { useLocalStorage } from './Components/localStorage';\n\nfunction App() {\n  const [query, handleQuery] = useState('');\n  const [activeCheckbox, checkboxHandler] = useState(false);\n  const [filterBy, selectFilterType] = useState('');\n\n  const [todos, handleChangeTodos] = useLocalStorage('todos', [])\n\n  const getFilteredTodos = (value) => {\n    switch(value) {\n      case 'completed':\n        return todos.filter(todo => todo.completed)\n\n      case 'uncompleted':\n        return todos.filter(todo => !todo.completed)\n\n      default:\n        case 'all':\n        return todos;\n    }\n  }\n\n  const filteredTodos = getFilteredTodos(filterBy)\n\n  const toggleCheckbox = () => {\n    if (activeCheckbox) {\n      checkboxHandler(false)\n    } else {\n      checkboxHandler(true)\n    }\n  }\n\n  useEffect(() => {\n    if (activeCheckbox) {\n      handleChangeTodos(todos\n        .map(todo => ({\n          ...todo,\n          completed: true,\n        }))\n      )\n    } else {\n      handleChangeTodos(todos\n        .map(todo => ({\n          ...todo,\n          completed: false,\n        }))\n      )\n    }\n\n   return () => {\n     console.log(`unmounted ${activeCheckbox}`);\n   }\n  }, [activeCheckbox])\n  \n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <Form\n          handleQuery={handleQuery}\n          query={query}\n          handleChangeTodos={handleChangeTodos}\n          todos={todos}\n        />\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          defaultChecked={activeCheckbox}\n          onChange={toggleCheckbox}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        {todos.length !== 0 && (\n          <TodoList\n            todos={filteredTodos}\n            handleChangeTodos={handleChangeTodos}\n          />\n        )}\n      </section>\n\n      {todos.length > 0 && (\n      <TodosFilter\n        todos={todos}\n        selectFilterType={selectFilterType}\n        removeCompleted={handleChangeTodos}\n        filterBy={filterBy}\n      />\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useLocalStorage = (key, value) => {\n  const [storage, setStorage] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? value\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(storage))\n  }, [storage, key]);\n  \n  return [storage, setStorage]\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}